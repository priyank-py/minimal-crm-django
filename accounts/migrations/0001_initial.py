# Generated by Django 2.2.8 on 2020-01-10 14:32

import accounts.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('leads', '0001_initial'),
        ('employees', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Quotation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(default=django.utils.timezone.now, verbose_name='Dated')),
                ('client_name', models.CharField(max_length=50, verbose_name='Client Name')),
                ('client_address', models.TextField(blank=True, null=True, verbose_name='To')),
                ('subject', models.CharField(blank=True, max_length=140, null=True, verbose_name='Subject')),
                ('reference', models.CharField(blank=True, max_length=80, null=True, verbose_name='Ref')),
                ('total_amount', models.PositiveIntegerField(blank=True, null=True, verbose_name='Total Amount')),
                ('amount_in_word', models.CharField(blank=True, max_length=50, null=True, verbose_name='Amount in Words')),
                ('company_terms', models.TextField(blank=True, null=True, verbose_name='Company Terms & Conditions')),
                ('client_terms', models.TextField(blank=True, null=True, verbose_name="Client's Terms & Conditions")),
                ('signature', models.ImageField(blank=True, null=True, upload_to=None, verbose_name='Upload Authorised Signator')),
            ],
        ),
        migrations.CreateModel(
            name='QuotationRatesAndTerms',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_description', models.CharField(blank=True, max_length=80, null=True, verbose_name='Item Description')),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Price')),
                ('tax', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Tax (18%)')),
                ('total', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Total Price')),
                ('quotation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='quote_details', to='accounts.Quotation', verbose_name='Quotation')),
            ],
            options={
                'verbose_name': 'QuotationRatesAndTerms',
                'verbose_name_plural': 'QuotationRatesAndTermss',
            },
        ),
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enquired_for', models.CharField(blank=True, max_length=50, null=True, verbose_name='Service Taken')),
                ('batchstartdate', models.DateField(blank=True, default=None, null=True, verbose_name='Batch Start Date')),
                ('invoice_number', models.CharField(default=accounts.models.increment_invoice_number, editable=False, max_length=50, unique=True, verbose_name='Invoice#')),
                ('add_fee', models.IntegerField(blank=True, null=True, verbose_name='Admission Fee')),
                ('course_ware_fee', models.IntegerField(blank=True, null=True)),
                ('tution_fee', models.IntegerField(blank=True, null=True)),
                ('project_fee', models.IntegerField(blank=True, null=True)),
                ('late_fee', models.IntegerField(blank=True, null=True)),
                ('exam_fee', models.IntegerField(blank=True, null=True)),
                ('other', models.IntegerField(blank=True, null=True)),
                ('sub_total', models.IntegerField(blank=True, null=True)),
                ('gst', models.CharField(blank=True, max_length=50, null=True)),
                ('g_total', models.IntegerField(blank=True, null=True, verbose_name='Grand Total')),
                ('amount_words', models.CharField(blank=True, max_length=200, null=True, verbose_name='Amount in word')),
                ('counselor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='employees.Employee', verbose_name='Counseled by')),
                ('lead', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lead_invoice', to='leads.Lead', verbose_name='Lead')),
            ],
        ),
        migrations.CreateModel(
            name='InstallmentData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('installment_date', models.DateField(blank=True, null=True, verbose_name='Date')),
                ('installment_amount', models.IntegerField(blank=True, null=True, verbose_name='Amount')),
                ('invoice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.Invoice', verbose_name='')),
            ],
        ),
        migrations.CreateModel(
            name='ClientInvoice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enquired_for', models.CharField(blank=True, max_length=50, null=True, verbose_name='Service Taken')),
                ('batchstartdate', models.DateField(blank=True, default=None, null=True, verbose_name='Batch Start Date')),
                ('add_fee', models.IntegerField(blank=True, null=True, verbose_name='Admission Fee')),
                ('course_ware_fee', models.IntegerField(blank=True, null=True)),
                ('tution_fee', models.IntegerField(blank=True, null=True)),
                ('project_fee', models.IntegerField(blank=True, null=True)),
                ('late_fee', models.IntegerField(blank=True, null=True)),
                ('exam_fee', models.IntegerField(blank=True, null=True)),
                ('other', models.IntegerField(blank=True, null=True)),
                ('sub_total', models.IntegerField(blank=True, null=True)),
                ('gst', models.CharField(blank=True, max_length=50, null=True)),
                ('g_total', models.IntegerField(blank=True, null=True, verbose_name='Grand Total')),
                ('amount_words', models.CharField(blank=True, max_length=200, null=True, verbose_name='Amount in word')),
                ('counselor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='employees.Employee', verbose_name='BDE Name')),
                ('lead', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='leads.CorporateAndInstitutionLead', verbose_name='Client')),
            ],
            options={
                'verbose_name': 'ClientInvoice',
                'verbose_name_plural': 'ClientInvoices',
            },
        ),
        migrations.CreateModel(
            name='ClientInstallmentData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('installment_date', models.DateField(blank=True, null=True, verbose_name='Date')),
                ('installment_amount', models.IntegerField(blank=True, null=True, verbose_name='Amount')),
                ('paid', models.BooleanField(blank=True, choices=[(True, 'Paid'), (False, 'Unpaid')], default=False, null=True, verbose_name='Payment Status')),
                ('invoice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.ClientInvoice', verbose_name='')),
            ],
        ),
        migrations.CreateModel(
            name='ClientBill',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bill_date', models.DateField(blank=True, default=django.utils.timezone.now, null=True)),
                ('payment_option', models.CharField(choices=[('cash', 'Cash'), ('cheque', 'Cheque'), ('card', 'Card'), ('online', 'Online')], max_length=30, verbose_name='Pay Option')),
                ('recieve_amount', models.IntegerField(blank=True, null=True, verbose_name='Recieved Amount')),
                ('amount_in_word', models.CharField(blank=True, max_length=50, null=True, verbose_name='Amount in Words')),
                ('credit_card_no', models.CharField(blank=True, default=None, max_length=20, null=True, verbose_name='Credit/Debit Card No.')),
                ('dd_no', models.CharField(blank=True, default=None, max_length=20, null=True, verbose_name='DD No.')),
                ('cheque_no', models.CharField(blank=True, default=None, max_length=20, null=True)),
                ('drawn_on', models.DateField(blank=True, default=django.utils.timezone.now, null=True, verbose_name='Drawn on')),
                ('bank_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='Bank name')),
                ('bank_branch', models.CharField(blank=True, max_length=50, null=True, verbose_name='Bank Branch Name')),
                ('cheque_status', models.CharField(blank=True, choices=[('cleared', 'Cleared'), ('pending', 'Pending'), ('failed', 'Failed')], max_length=10, null=True, verbose_name='Cheque Status')),
                ('tens', models.IntegerField(blank=True, null=True, verbose_name='Rs. 10 notes')),
                ('twenties', models.IntegerField(blank=True, null=True, verbose_name='Rs. 20 notes')),
                ('fiftys', models.IntegerField(blank=True, null=True, verbose_name='Rs. 50 notes')),
                ('hundreds', models.IntegerField(blank=True, null=True, verbose_name='Rs. 100 notes')),
                ('two_hundreds', models.IntegerField(blank=True, null=True, verbose_name='Rs. 200 notes')),
                ('five_hundreds', models.IntegerField(blank=True, null=True, verbose_name='Rs. 500 notes')),
                ('two_thousands', models.IntegerField(blank=True, null=True, verbose_name='Rs. 2000 notes')),
                ('invoice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.ClientInvoice', verbose_name='')),
            ],
            options={
                'verbose_name': 'Client Bill',
                'verbose_name_plural': 'Client Bills',
            },
        ),
        migrations.CreateModel(
            name='Bill',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bill_number', models.CharField(blank=True, default=accounts.models.increment_bill_number, editable=False, max_length=50, null=True, unique=True, verbose_name='Bill#')),
                ('bill_date', models.DateField(blank=True, default=django.utils.timezone.now, null=True)),
                ('payment_option', models.CharField(blank=True, choices=[('cash', 'Cash'), ('cheque', 'Cheque'), ('card', 'Card'), ('online', 'Online')], max_length=30, null=True, verbose_name='Pay Option')),
                ('recieve_amount', models.IntegerField(blank=True, null=True, verbose_name='Recieved Amount')),
                ('amount_in_word', models.CharField(blank=True, max_length=50, null=True, verbose_name='Amount in Words')),
                ('credit_card_no', models.CharField(blank=True, default=None, max_length=20, null=True, verbose_name='Credit/Debit Card No.')),
                ('dd_no', models.CharField(blank=True, default=None, max_length=20, null=True, verbose_name='DD No.')),
                ('cheque_no', models.CharField(blank=True, default=None, max_length=20, null=True)),
                ('drawn_on', models.DateField(blank=True, default=django.utils.timezone.now, null=True, verbose_name='Drawn on')),
                ('bank_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='Bank name')),
                ('bank_branch', models.CharField(blank=True, max_length=50, null=True, verbose_name='Bank Branch Name')),
                ('cheque_status', models.CharField(blank=True, choices=[('cleared', 'Cleared'), ('pending', 'Pending'), ('failed', 'Failed')], max_length=10, null=True, verbose_name='Cheque Status')),
                ('change', models.IntegerField(blank=True, null=True, verbose_name='Change amount')),
                ('tens', models.IntegerField(blank=True, null=True, verbose_name='Rs. 10 notes')),
                ('twenties', models.IntegerField(blank=True, null=True, verbose_name='Rs. 20 notes')),
                ('fiftys', models.IntegerField(blank=True, null=True, verbose_name='Rs. 50 notes')),
                ('hundreds', models.IntegerField(blank=True, null=True, verbose_name='Rs. 100 notes')),
                ('two_hundreds', models.IntegerField(blank=True, null=True, verbose_name='Rs. 200 notes')),
                ('five_hundreds', models.IntegerField(blank=True, null=True, verbose_name='Rs. 500 notes')),
                ('two_thousands', models.IntegerField(blank=True, null=True, verbose_name='Rs. 2000 notes')),
                ('invoice', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='source_invoice', to='accounts.Invoice')),
            ],
            options={
                'verbose_name': 'Bill',
                'verbose_name_plural': 'Bills',
            },
        ),
    ]
