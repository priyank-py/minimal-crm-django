# Generated by Django 2.2.8 on 2020-01-10 14:32

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import taggit.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('employees', '0001_initial'),
        ('taggit', '0003_taggeditem_add_unique_index'),
    ]

    operations = [
        migrations.CreateModel(
            name='CorporateAndInstitutionLead',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Corporate/Institution Name')),
                ('contact_person', models.CharField(max_length=50, verbose_name='Contact Person Name')),
                ('cp_designation', models.CharField(blank=True, max_length=50, null=True, verbose_name='Contact Person Designation')),
                ('cp_phone', models.CharField(blank=True, max_length=50, null=True, verbose_name='Contact Person Phone Number')),
                ('cp_alternative', models.CharField(max_length=50, verbose_name='Contact Person Alternative  Number')),
                ('cp_email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Contact Person Email')),
                ('institution_or_corporate_website', models.URLField(blank=True, null=True, verbose_name='Website of Corporate/Institution')),
                ('enquired_for', models.CharField(max_length=50)),
                ('billing_amount', models.IntegerField(blank=True, null=True, verbose_name='Collections Amount')),
                ('agreement_signed', models.BooleanField(blank=True, choices=[(True, 'Signed'), (False, 'Not Signed')], default='', null=True)),
                ('agreement_copy', models.FileField(blank=True, null=True, upload_to='agreements/%Y/%m/%d/', verbose_name='Agreement Copy')),
                ('quotation', models.FileField(upload_to='quotations/%Y/%m/%d/', verbose_name='Quotation Copy')),
                ('quotation_dated', models.DateField(verbose_name='Quotation preperation date')),
                ('bde_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='employees.Employee', verbose_name='BDE Name')),
            ],
        ),
        migrations.CreateModel(
            name='Lead',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lead_name', models.CharField(max_length=150)),
                ('lead_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('lead_phone', models.CharField(max_length=20)),
                ('campaign_remarks', models.CharField(blank=True, max_length=255, null=True)),
                ('enquired_for', models.CharField(blank=True, choices=[('course', 'Course'), ('project', 'Project'), ('internship', 'Internship'), ('jobassured', 'Job Assured Training'), ('onlyjob', 'Only Job')], default='', max_length=250, null=True)),
                ('technology_based', models.CharField(blank=True, max_length=250, null=True)),
                ('course_fee', models.IntegerField(blank=True, default=0, null=True)),
                ('under_graduation', models.CharField(blank=True, max_length=200)),
                ('year_of_passing_UG', models.IntegerField(blank=True, choices=[(2000, 2000), (2001, 2001), (2002, 2002), (2003, 2003), (2004, 2004), (2005, 2005), (2006, 2006), (2007, 2007), (2008, 2008), (2009, 2009), (2010, 2010), (2011, 2011), (2012, 2012), (2013, 2013), (2014, 2014), (2015, 2015), (2016, 2016), (2017, 2017), (2018, 2018), (2019, 2019), (2020, 2020), (2021, 2021), (2022, 2022), (2023, 2023)], default=2020, null=True)),
                ('marks_UG', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(39.99), django.core.validators.MaxValueValidator(100)])),
                ('post_graduation', models.CharField(blank=True, max_length=200)),
                ('year_of_passing_PG', models.IntegerField(blank=True, choices=[(2000, 2000), (2001, 2001), (2002, 2002), (2003, 2003), (2004, 2004), (2005, 2005), (2006, 2006), (2007, 2007), (2008, 2008), (2009, 2009), (2010, 2010), (2011, 2011), (2012, 2012), (2013, 2013), (2014, 2014), (2015, 2015), (2016, 2016), (2017, 2017), (2018, 2018), (2019, 2019), (2020, 2020), (2021, 2021), (2022, 2022), (2023, 2023)], default=2020, null=True)),
                ('marks_PG', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(39.99), django.core.validators.MaxValueValidator(100)])),
                ('location', models.CharField(blank=True, max_length=200, null=True)),
                ('lead_image', models.ImageField(blank=True, upload_to='photos/%Y/%m/%d/')),
                ('is_counseled', models.BooleanField(default=False)),
                ('generation_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('counselor_name', models.CharField(blank=True, max_length=100, null=True)),
                ('assigned_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='counselor', to='employees.Employee')),
                ('skills_known', taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='technologies known')),
            ],
        ),
        migrations.CreateModel(
            name='LeadRemarks',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('remarks', models.CharField(blank=True, max_length=200, null=True)),
                ('next_follow_up_date', models.DateField(blank=True, null=True)),
                ('status', models.CharField(blank=True, choices=[('leadclose', 'Lead Closed'), ('leadwalkin', 'Lead walked in'), ('leadfollowup', 'Leads follow up'), ('leadreg', 'Lead Registered'), ('walkinfollowup', 'Walk in follow up'), ('walkinreg', 'Walk in registered'), ('walkindeclaration', 'Walk declaration Signed'), ('walkinclose', 'Walk in closed')], default='', max_length=200, null=True)),
                ('lead', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='lead_remarks', to='leads.Lead')),
            ],
        ),
        migrations.CreateModel(
            name='CorporateAndInstitutionLeadRemark',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('remark', models.CharField(blank=True, max_length=200, null=True, verbose_name='remarks')),
                ('follow_up_date', models.DateField(blank=True, default='', null=True, verbose_name='Follow-up Date')),
                ('lead_status', models.CharField(blank=True, choices=[('hot', 'Hot'), ('warm', 'Warm'), ('cold', 'Cold'), ('converted', 'Converted'), ('closed', 'Closed')], max_length=50, null=True, verbose_name='lead status')),
                ('corporate_or_institution_lead', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='corp_lead_remark', to='leads.CorporateAndInstitutionLead')),
            ],
        ),
    ]
